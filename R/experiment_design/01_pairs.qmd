---
title: "Designing two-species subcommunities"
author: "Shane Hogle"
date: today
link-citations: true
---

# Setup

## Libraries
```{r}
#| output: false
library(here)
library(tidyverse)
library(ggplate)
```

## Functions and vars

Species color vector
```{r}
my_colors <- c(
  "ANC_0403_10" = "#ffaaaa", "ANC_0403_70" = "#aa0000", "ANC_0403_80" = "#aa0000", "ANC_0403_90" = "#aa0000", 
  "ANC_1287_10" = "#ffeeaa", "ANC_1287_70" = "#d4aa00", "ANC_1287_80" = "#d4aa00", "ANC_1287_90" = "#d4aa00", 
  "ANC_1896_10" = "#ccffaa", "ANC_1896_70" = "#44aa00", "ANC_1896_80" = "#44aa00", "ANC_1896_90" = "#44aa00", 
  "ANC_1977_10" = "#aaccff", "ANC_1977_70" = "#0055d4", "ANC_1977_80" = "#0055d4", "ANC_1977_90" = "#0055d4",
  "EVO_0403_10" = "#ffaaee", "EVO_0403_70" = "#ff00cc", "EVO_0403_80" = "#ff00cc", "EVO_0403_90" = "#ff00cc", 
  "EVO_1287_10" = "#ffccaa", "EVO_1287_70" = "#ff6600", "EVO_1287_80" = "#ff6600", "EVO_1287_90" = "#ff6600", 
  "EVO_1896_10" = "#aaffee", "EVO_1896_70" = "#00ffcc", "EVO_1896_80" = "#00ffcc", "EVO_1896_90" = "#00ffcc", 
  "EVO_1977_10" = "#ccaaff", "EVO_1977_70" = "#7f2aff", "EVO_1977_80" = "#7f2aff", "EVO_1977_90" = "#7f2aff"
  )
```

For plotting plates
```{r}
plate_plot_steps <- function(df, well_colmun, val_column, step, colr_vec){
  ggplate::plate_plot(df,
  position = {{ well_colmun }},
  value = {{ val_column }},
  colour = colr_vec,
  plate_size = 96,
  plate_type = "round"
) + ggtitle(step)
}
```

# Construct pair combinations

Get all possible pairs while excluding combinations of ANC/EVO of the same species

```{r}
combos02 <- t(combn(c("ANC_0403", "EVO_0403", "ANC_1287", "EVO_1287", "ANC_1896", "EVO_1896", "ANC_1977", "EVO_1977"),  2))
combos02 <- tibble("a" = combos02[, 1], "b" = combos02[, 2])
combos02_filt <- combos02 %>%
  filter(str_extract(a, "\\d+") != str_extract(b, "\\d+"))
```

Make plate layouts for the 2-species combos

```{r}
combos02_filt_well_left <- combos02_filt %>% 
  mutate(a = paste(a, 90, sep = "_"), 
         b = paste(b, 10, sep = "_")) %>% 
  add_count(a, name = "a_count") %>% 
  add_count(b, name = "b_count") %>% 
  arrange(desc(a_count), a) %>% 
  mutate(row = rep(LETTERS[1:n_distinct(a)], 
                   times = rep(c(n_distinct(a):2)[n_distinct(a):2%%2 == 0], each = 2))) %>% 
  group_by(row) %>% 
  arrange(desc(b_count), b) %>% 
  mutate(col = str_pad(1:length(row), 2, pad = "0")) %>% 
  ungroup() %>%
  mutate(well = paste0(row, col))

combos02_filt_well_right <- combos02_filt %>% 
  mutate(a = paste(a, 10, sep = "_"), 
         b = paste(b, 90, sep = "_")) %>% 
  add_count(a, name = "a_count") %>% 
  add_count(b, name = "b_count") %>% 
  arrange(desc(a_count), a) %>% 
  mutate(row = rep(LETTERS[1:n_distinct(a)], 
                   times = rep(c(n_distinct(a):2)[n_distinct(a):2%%2 == 0], each = 2))) %>% 
  group_by(row) %>% 
  arrange(desc(b_count), b) %>% 
  mutate(col = str_pad(1:length(row)+6, 2, pad = "0")) %>% 
  ungroup() %>%
  mutate(well = paste0(row, col)) %>% 
  rename(a = b, b = a )

combos02_filt_well <- bind_rows(combos02_filt_well_left, combos02_filt_well_right)
```

## First pipetting step

::: {#fig-01}
```{r}
#| fig.width: 8
#| fig.height: 5
#| echo: false
plate_plot_steps(combos02_filt_well, well, a, "Pairs Step 1", my_colors)
```
Layout for the first pipetting step for constructing pairs. Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 90% (e.g., `_90`) or 10% (e.g., `_10`).
:::

## Second pipetting step

::: {#fig-02}
```{r}
#| fig.width: 8
#| fig.height: 5
#| echo: false
plate_plot_steps(combos02_filt_well, well, b, "Pairs Step 2", my_colors)
```
Layout for the second pipetting step for constructing pairs. Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 90% (e.g., `_90`) or 10% (e.g., `_10`).
:::
