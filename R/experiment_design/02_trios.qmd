---
title: "Designing three-species subcommunities"
author: "Shane Hogle"
date: today
link-citations: true
---

# Setup

## Libraries
```{r}
#| output: false
library(here)
library(tidyverse)
library(ggplate)
```


## Functions and vars

Species color vector
```{r}
my_colors <- c(
  "ANC_0403_10" = "#ffaaaa", "ANC_0403_70" = "#aa0000", "ANC_0403_80" = "#aa0000", "ANC_0403_90" = "#aa0000", 
  "ANC_1287_10" = "#ffeeaa", "ANC_1287_70" = "#d4aa00", "ANC_1287_80" = "#d4aa00", "ANC_1287_90" = "#d4aa00", 
  "ANC_1896_10" = "#ccffaa", "ANC_1896_70" = "#44aa00", "ANC_1896_80" = "#44aa00", "ANC_1896_90" = "#44aa00", 
  "ANC_1977_10" = "#aaccff", "ANC_1977_70" = "#0055d4", "ANC_1977_80" = "#0055d4", "ANC_1977_90" = "#0055d4",
  "EVO_0403_10" = "#ffaaee", "EVO_0403_70" = "#ff00cc", "EVO_0403_80" = "#ff00cc", "EVO_0403_90" = "#ff00cc", 
  "EVO_1287_10" = "#ffccaa", "EVO_1287_70" = "#ff6600", "EVO_1287_80" = "#ff6600", "EVO_1287_90" = "#ff6600", 
  "EVO_1896_10" = "#aaffee", "EVO_1896_70" = "#00ffcc", "EVO_1896_80" = "#00ffcc", "EVO_1896_90" = "#00ffcc", 
  "EVO_1977_10" = "#ccaaff", "EVO_1977_70" = "#7f2aff", "EVO_1977_80" = "#7f2aff", "EVO_1977_90" = "#7f2aff"
  )
```

For plotting plates
```{r}
plate_plot_steps <- function(df, well_colmun, val_column, step, colr_vec){
  ggplate::plate_plot(df,
  position = {{ well_colmun }},
  value = {{ val_column }},
  colour = colr_vec,
  plate_size = 96,
  plate_type = "round"
) + ggtitle(step)
}
```

# Construct trio combinations

Get all possible trios while excluding combinations of ANC/EVO of the same species

```{r}
combos03 <- t(combn(c("ANC_0403", "EVO_0403", "ANC_1287", "EVO_1287", "ANC_1977", "EVO_1977", "ANC_1896", "EVO_1896"),  3))
combos03 <- tibble("a" = combos03[, 1], "b" = combos03[, 2], "c" = combos03[, 3])
combos03_filt <- combos03 %>%
  filter(str_extract(a, "\\d+") != str_extract(b, "\\d+")) %>% 
  filter(str_extract(a, "\\d+") != str_extract(c, "\\d+")) %>% 
  filter(str_extract(b, "\\d+") != str_extract(c, "\\d+"))
```

Make plate layouts for the 3-species combos

```{r}
combos03_filt_wells <- combos03_filt %>% 
  slice(rep(1:n(), each = 3)) %>%
  mutate(a = paste(a, c(80, 10, 10), sep = "_"),
         b = paste(b, c(10, 80, 10), sep = "_"),
         c = paste(c, c(10, 10, 80), sep = "_")) %>% 
  arrange(a, b, c) %>% 
  # this is a kludge to arrange the species in the most continuous blocks
  mutate(well = paste0(rep(c(LETTERS[c(c(1:8)[1:8%%2 == 1], 
                                         c(1:8)[1:8%%2 == 0])]), 
                             each = n()/8),
                         str_pad(rep(1:12, times = n()/12), 2, pad = "0")))
```

## First pipetting step

::: {#fig-01}
```{r}
#| fig.width: 8
#| fig.height: 5
#| echo: false
plate_plot_steps(combos03_filt_wells, well, a, "Trios Step 1", my_colors)
```
Layout for the first pipetting step for constructing trios Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 80% (e.g., `_80`) or 10% (e.g., `_10`).
:::

## Second pipetting step

::: {#fig-02}
```{r}
#| fig.width: 8
#| fig.height: 5
#| echo: false
plate_plot_steps(combos03_filt_wells, well, b, "Trios Step 2", my_colors)
```
Layout for the second pipetting step for constructing trios Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 80% (e.g., `_80`) or 10% (e.g., `_10`).
:::

## Third pipetting step

::: {#fig-03}
```{r}
#| fig.width: 8
#| fig.height: 5
#| echo: false
plate_plot_steps(combos03_filt_wells, well, c, "Trios Step 3", my_colors)
```
Layout for the third pipetting step for constructing trios Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 80% (e.g., `_80`) or 10% (e.g., `_10`).
:::