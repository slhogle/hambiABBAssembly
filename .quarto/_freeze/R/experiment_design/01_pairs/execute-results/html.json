{
  "hash": "1d7df84e8ff297f375ae946e8646d02c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Designing two-species subcommunities\"\nauthor: \"Shane Hogle\"\ndate: today\nlink-citations: true\n---\n\n\n# Setup\n\n## Libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(here)\nlibrary(tidyverse)\nlibrary(ggplate)\n```\n:::\n\n\n## Global variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata <- here::here(\"data\", \"experiment_design\")\n\n# make processed data directory if it doesn't exist\nfs::dir_create(data)\n```\n:::\n\n\n## Functions and vars\n\nSpecies color vector\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_colors <- c(\n  \"ANC_0403_10\" = \"#ffaaaa\", \"ANC_0403_70\" = \"#aa0000\", \"ANC_0403_80\" = \"#aa0000\", \"ANC_0403_90\" = \"#aa0000\", \n  \"ANC_1287_10\" = \"#ffeeaa\", \"ANC_1287_70\" = \"#d4aa00\", \"ANC_1287_80\" = \"#d4aa00\", \"ANC_1287_90\" = \"#d4aa00\", \n  \"ANC_1896_10\" = \"#ccffaa\", \"ANC_1896_70\" = \"#44aa00\", \"ANC_1896_80\" = \"#44aa00\", \"ANC_1896_90\" = \"#44aa00\", \n  \"ANC_1977_10\" = \"#aaccff\", \"ANC_1977_70\" = \"#0055d4\", \"ANC_1977_80\" = \"#0055d4\", \"ANC_1977_90\" = \"#0055d4\",\n  \"EVO_0403_10\" = \"#ffaaee\", \"EVO_0403_70\" = \"#ff00cc\", \"EVO_0403_80\" = \"#ff00cc\", \"EVO_0403_90\" = \"#ff00cc\", \n  \"EVO_1287_10\" = \"#ffccaa\", \"EVO_1287_70\" = \"#ff6600\", \"EVO_1287_80\" = \"#ff6600\", \"EVO_1287_90\" = \"#ff6600\", \n  \"EVO_1896_10\" = \"#aaffee\", \"EVO_1896_70\" = \"#00ffcc\", \"EVO_1896_80\" = \"#00ffcc\", \"EVO_1896_90\" = \"#00ffcc\", \n  \"EVO_1977_10\" = \"#ccaaff\", \"EVO_1977_70\" = \"#7f2aff\", \"EVO_1977_80\" = \"#7f2aff\", \"EVO_1977_90\" = \"#7f2aff\"\n  )\n```\n:::\n\n\nFor plotting plates\n\n::: {.cell}\n\n```{.r .cell-code}\nplate_plot_steps <- function(df, well_colmun, val_column, step, colr_vec){\n  ggplate::plate_plot(df,\n  position = {{ well_colmun }},\n  value = {{ val_column }},\n  colour = colr_vec,\n  plate_size = 96,\n  plate_type = \"round\"\n) + ggtitle(step)\n}\n```\n:::\n\n\n# Construct pair combinations\n\nGet all possible pairs while excluding combinations of ANC/EVO of the same species\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombos02 <- t(combn(c(\"ANC_0403\", \"EVO_0403\", \"ANC_1287\", \"EVO_1287\", \"ANC_1896\", \"EVO_1896\", \"ANC_1977\", \"EVO_1977\"),  2))\ncombos02 <- tibble(\"a\" = combos02[, 1], \"b\" = combos02[, 2])\ncombos02_filt <- combos02 %>%\n  filter(str_extract(a, \"\\\\d+\") != str_extract(b, \"\\\\d+\"))\n```\n:::\n\n\nMake plate layouts for the 2-species combos\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombos02_filt_well_left <- combos02_filt %>% \n  mutate(a = paste(a, 90, sep = \"_\"), \n         b = paste(b, 10, sep = \"_\")) %>% \n  add_count(a, name = \"a_count\") %>% \n  add_count(b, name = \"b_count\") %>% \n  arrange(desc(a_count), a) %>% \n  mutate(row = rep(LETTERS[1:n_distinct(a)], \n                   times = rep(c(n_distinct(a):2)[n_distinct(a):2%%2 == 0], each = 2))) %>% \n  group_by(row) %>% \n  arrange(desc(b_count), b) %>% \n  mutate(col = str_pad(1:length(row), 2, pad = \"0\")) %>% \n  ungroup() %>%\n  mutate(well = paste0(row, col))\n\ncombos02_filt_well_right <- combos02_filt %>% \n  mutate(a = paste(a, 10, sep = \"_\"), \n         b = paste(b, 90, sep = \"_\")) %>% \n  add_count(a, name = \"a_count\") %>% \n  add_count(b, name = \"b_count\") %>% \n  arrange(desc(a_count), a) %>% \n  mutate(row = rep(LETTERS[1:n_distinct(a)], \n                   times = rep(c(n_distinct(a):2)[n_distinct(a):2%%2 == 0], each = 2))) %>% \n  group_by(row) %>% \n  arrange(desc(b_count), b) %>% \n  mutate(col = str_pad(1:length(row)+6, 2, pad = \"0\")) %>% \n  ungroup() %>%\n  mutate(well = paste0(row, col)) %>% \n  rename(a = b, b = a )\n\ncombos02_filt_well <- bind_rows(combos02_filt_well_left, combos02_filt_well_right)\n```\n:::\n\n\n## Format and save\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncombos02_filt_well %>%\n  group_by(a, b) %>% \n  mutate(microcosm_id = cur_group_id()) %>% \n  ungroup() %>% \n  mutate(a_sp = paste0(str_split_i(a, \"_\", 2), stringr::str_extract(str_split_i(a, \"_\", 1), \"^.{1}\")),\n         b_sp = paste0(str_split_i(b, \"_\", 2), stringr::str_extract(str_split_i(b, \"_\", 1), \"^.{1}\")),\n         a_f = str_split_i(a, \"_\", 3),\n         b_f = str_split_i(b, \"_\", 3)) %>% \n  arrange(well) %>% \n  dplyr::select(microcosm_id, well, a, a_sp, a_f, b, b_sp, b_f) %>% \n  readr::write_tsv(here::here(data, \"pairs_sample_composition_wide.tsv\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncombos02_filt_well %>% \n  group_by(a, b) %>% \n  mutate(microcosm_id = cur_group_id()) %>% \n  ungroup() %>% \n  dplyr::select(a:b, well, microcosm_id) %>% \n  tidyr::pivot_longer(c(-well, -microcosm_id)) %>% \n  tidyr::separate(value, c(\"evo_hist\", \"strainID\", \"target_f\")) %>% \n  dplyr::mutate(evo_hist = stringr::str_to_lower(evo_hist),\n                strainID = paste0(\"HAMBI_\", strainID),\n                target_f = as.numeric(target_f)/100,\n                n_species = 2) %>% \n  dplyr::select(-name) %>% \n  dplyr::relocate(microcosm_id, n_species) %>% \n  readr::write_tsv(here::here(data, \"pairs_sample_composition_long.tsv\"))\n```\n:::\n\n\n# Pipetting\n\nProceed in the order of steps below to construct master plates used to inoculate different conditions\n\n## First pipetting step\n\n::: {#fig-01}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01_pairs_files/figure-html/unnamed-chunk-9-1.png){width=768}\n:::\n:::\n\nLayout for the first pipetting step for constructing pairs. Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 90% (e.g., `_90`) or 10% (e.g., `_10`).\n:::\n\n## Second pipetting step\n\n::: {#fig-02}\n\n::: {.cell}\n::: {.cell-output-display}\n![](01_pairs_files/figure-html/unnamed-chunk-10-1.png){width=768}\n:::\n:::\n\nLayout for the second pipetting step for constructing pairs. Different colors show different species/evolution combinations. The darkness of the color indicates whether a species/evolution combo is added at 90% (e.g., `_90`) or 10% (e.g., `_10`).\n:::\n",
    "supporting": [
      "01_pairs_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}